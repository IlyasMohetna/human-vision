services:
  app:
    build:
      context: ./core
      dockerfile: Dockerfile
      args:
        WWWUSER: "${UID:-1000}"
        WWWGROUP: "${GID:-1000}"
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./core:/var/www
    depends_on:
      - db
    networks:
      - app_network

  angular:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: angular_app
    restart: unless-stopped
    working_dir: /usr/src/app
    ports:
      - "4200:4200"
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "2002:2002"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./core:/var/www
    depends_on:
      - app
      - angular
    networks:
      - app_network

  db:
    image: mysql:8
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: humanvision
      MYSQL_USER: core
      MYSQL_PASSWORD: core
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network

volumes:
  db_data:

networks:
  app_network:
    driver: bridge
