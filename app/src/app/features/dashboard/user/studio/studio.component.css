.image-container {
  position: relative;
  overflow: hidden;
  width: 95%;
  height: 95%;
  margin: auto;
}

.image-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.zoomable-image {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  transform-origin: center;
  transition: none; /* Remove transition for smoother dragging */
}

/* Ensure our crosshair is above everything */
.crosshair-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000 !important;
}

.crosshair-h {
  position: absolute;
  height: 3px;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  pointer-events: none;
}

.crosshair-v {
  position: absolute;
  width: 3px;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  pointer-events: none;
}

.coordinate-label {
  position: absolute;
  z-index: 2001; /* Should be above the crosshair lines */
  background: rgba(0, 0, 0, 0.7);
  color: #fff;
  padding: 3px 6px;
  font-size: 12px;
  border-radius: 4px;
  pointer-events: none;
}

/* Clean up old styles */
/* Removed NgxImageZoom related styles since we're not using it anymore */

/* Add an animation for when zoom limit is reached */
@keyframes zoomLimitPulse {
  0% {
    transform: scale(var(--current-zoom));
  }
  50% {
    transform: scale(calc(var(--current-zoom) * 0.98));
  }
  100% {
    transform: scale(var(--current-zoom));
  }
}

.zoom-limit {
  animation: zoomLimitPulse 0.3s ease-in-out;
}

/* Update these styles to prevent white border during panning */
.image-container {
  position: relative;
  z-index: 1;
  overflow: hidden; /* Keep this to prevent content from spilling out */
  width: 95%;
  height: 95%;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #4c4c4c; /* Match the background color of the parent */
}

.image-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible; /* Changed from hidden to allow image to move beyond bounds */
  background-color: #4c4c4c; /* Match the background color */
}

.zoomable-image {
  max-width: 100%;
  max-height: 100%;
  min-width: 50%;
  min-height: 50%;
  object-fit: contain;
  transform-origin: center;
  transition: transform 0.1s ease-in-out;
  /* Remove any borders or margins */
  border: none;
  margin: 0;
  padding: 0;
}

/* Main content wrapper needs better overflow handling */
main {
  overflow: hidden; /* Ensure no overflow from the main element */
  background-color: #4c4c4c;
}

/* Make sure the annotation canvas matches the background */
canvas {
  background-color: transparent; /* Ensure the canvas is transparent */
}

/* Crosshair styling with very high z-index */
.crosshair-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
}

.crosshair-h {
  position: absolute;
  height: 3px;
  width: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  pointer-events: none;
}

.crosshair-v {
  position: absolute;
  width: 3px;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  pointer-events: none;
}

.image-container:focus,
.image-wrapper:focus,
.image-container:focus-visible,
.image-wrapper:focus-visible {
  outline: none !important;
  border: none !important;
  box-shadow: none !important;
}

[tabindex="0"]:focus {
  outline: none !important;
}
